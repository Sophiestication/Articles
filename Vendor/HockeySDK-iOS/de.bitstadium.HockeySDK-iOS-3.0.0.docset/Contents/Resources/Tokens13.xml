<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
	<File path="Classes/BITAttributedLabel.html">
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/cl/BITAttributedLabel</TokenIdentifier>
			<Abstract type="html">TTTAttributedLabel is a drop-in replacement for UILabel that supports NSAttributedString, as well as automatically-detected and manually-added links to URLs, addresses, phone numbers, and dates.</Abstract>
			<DeclaredIn>BITAttributedLabel.h</DeclaredIn>
			
			<NodeRef refid="13"/>
		</Token>
		
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/BITAttributedLabel/setDelegate:</TokenIdentifier>
			<Abstract type="html">The receiver&apos;s delegate.</Abstract>
			<DeclaredIn>BITAttributedLabel.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, unsafe_unretained) id&lt;BITAttributedLabelDelegate&gt; delegate</Declaration>
			
			
			<Anchor>//api/name/delegate</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/BITAttributedLabel/delegate</TokenIdentifier>
			<Abstract type="html">The receiver&apos;s delegate.</Abstract>
			<DeclaredIn>BITAttributedLabel.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, unsafe_unretained) id&lt;BITAttributedLabelDelegate&gt; delegate</Declaration>
			
			
			<Anchor>//api/name/delegate</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/BITAttributedLabel/setDataDetectorTypes:</TokenIdentifier>
			<Abstract type="html">A bitmask of UIDataDetectorTypes which are used to automatically detect links in the label text. This is UIDataDetectorTypeNone by default.</Abstract>
			<DeclaredIn>BITAttributedLabel.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, assign) UIDataDetectorTypes dataDetectorTypes</Declaration>
			
			
			<Anchor>//api/name/dataDetectorTypes</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/BITAttributedLabel/dataDetectorTypes</TokenIdentifier>
			<Abstract type="html">A bitmask of UIDataDetectorTypes which are used to automatically detect links in the label text. This is UIDataDetectorTypeNone by default.</Abstract>
			<DeclaredIn>BITAttributedLabel.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, assign) UIDataDetectorTypes dataDetectorTypes</Declaration>
			
			
			<Anchor>//api/name/dataDetectorTypes</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/BITAttributedLabel/setLinks:</TokenIdentifier>
			<Abstract type="html">An array of NSTextCheckingResult objects for links detected or manually added to the label text.</Abstract>
			<DeclaredIn>BITAttributedLabel.h</DeclaredIn>			
			
			<Declaration>@property (readonly, nonatomic, strong) NSArray *links</Declaration>
			
			
			<Anchor>//api/name/links</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/BITAttributedLabel/links</TokenIdentifier>
			<Abstract type="html">An array of NSTextCheckingResult objects for links detected or manually added to the label text.</Abstract>
			<DeclaredIn>BITAttributedLabel.h</DeclaredIn>			
			
			<Declaration>@property (readonly, nonatomic, strong) NSArray *links</Declaration>
			
			
			<Anchor>//api/name/links</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/BITAttributedLabel/setLinkAttributes:</TokenIdentifier>
			<Abstract type="html">A dictionary containing the NSAttributedString attributes to be applied to links detected or manually added to the label text. The default link style is blue and underlined.</Abstract>
			<DeclaredIn>BITAttributedLabel.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, strong) NSDictionary *linkAttributes</Declaration>
			
			
			<Anchor>//api/name/linkAttributes</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/BITAttributedLabel/linkAttributes</TokenIdentifier>
			<Abstract type="html">A dictionary containing the NSAttributedString attributes to be applied to links detected or manually added to the label text. The default link style is blue and underlined.</Abstract>
			<DeclaredIn>BITAttributedLabel.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, strong) NSDictionary *linkAttributes</Declaration>
			
			
			<Anchor>//api/name/linkAttributes</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/BITAttributedLabel/setActiveLinkAttributes:</TokenIdentifier>
			<Abstract type="html">A dictionary containing the NSAttributedString attributes to be applied to links when they are in the active state. Supply nil or an empty dictionary to opt out of active link styling. The default active link style is red and underlined.</Abstract>
			<DeclaredIn>BITAttributedLabel.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, strong) NSDictionary *activeLinkAttributes</Declaration>
			
			
			<Anchor>//api/name/activeLinkAttributes</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/BITAttributedLabel/activeLinkAttributes</TokenIdentifier>
			<Abstract type="html">A dictionary containing the NSAttributedString attributes to be applied to links when they are in the active state. Supply nil or an empty dictionary to opt out of active link styling. The default active link style is red and underlined.</Abstract>
			<DeclaredIn>BITAttributedLabel.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, strong) NSDictionary *activeLinkAttributes</Declaration>
			
			
			<Anchor>//api/name/activeLinkAttributes</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/BITAttributedLabel/setShadowRadius:</TokenIdentifier>
			<Abstract type="html">The shadow blur radius for the label. A value of 0 indicates no blur, while larger values produce correspondingly larger blurring. This value must not be negative. The default value is 0.</Abstract>
			<DeclaredIn>BITAttributedLabel.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, assign) CGFloat shadowRadius</Declaration>
			
			
			<Anchor>//api/name/shadowRadius</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/BITAttributedLabel/shadowRadius</TokenIdentifier>
			<Abstract type="html">The shadow blur radius for the label. A value of 0 indicates no blur, while larger values produce correspondingly larger blurring. This value must not be negative. The default value is 0.</Abstract>
			<DeclaredIn>BITAttributedLabel.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, assign) CGFloat shadowRadius</Declaration>
			
			
			<Anchor>//api/name/shadowRadius</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/BITAttributedLabel/setFirstLineIndent:</TokenIdentifier>
			<Abstract type="html">The distance, in points, from the leading margin of a frame to the beginning of the paragraph&apos;s first line. This value is always nonnegative, and is 0.0 by default.</Abstract>
			<DeclaredIn>BITAttributedLabel.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, assign) CGFloat firstLineIndent</Declaration>
			
			
			<Anchor>//api/name/firstLineIndent</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/BITAttributedLabel/firstLineIndent</TokenIdentifier>
			<Abstract type="html">The distance, in points, from the leading margin of a frame to the beginning of the paragraph&apos;s first line. This value is always nonnegative, and is 0.0 by default.</Abstract>
			<DeclaredIn>BITAttributedLabel.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, assign) CGFloat firstLineIndent</Declaration>
			
			
			<Anchor>//api/name/firstLineIndent</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/BITAttributedLabel/setLeading:</TokenIdentifier>
			<Abstract type="html">The space in points added between lines within the paragraph. This value is always nonnegative and is 0.0 by default.</Abstract>
			<DeclaredIn>BITAttributedLabel.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, assign) CGFloat leading</Declaration>
			
			
			<Anchor>//api/name/leading</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/BITAttributedLabel/leading</TokenIdentifier>
			<Abstract type="html">The space in points added between lines within the paragraph. This value is always nonnegative and is 0.0 by default.</Abstract>
			<DeclaredIn>BITAttributedLabel.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, assign) CGFloat leading</Declaration>
			
			
			<Anchor>//api/name/leading</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/BITAttributedLabel/setLineHeightMultiple:</TokenIdentifier>
			<Abstract type="html">The line height multiple. This value is 0.0 by default.</Abstract>
			<DeclaredIn>BITAttributedLabel.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, assign) CGFloat lineHeightMultiple</Declaration>
			
			
			<Anchor>//api/name/lineHeightMultiple</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/BITAttributedLabel/lineHeightMultiple</TokenIdentifier>
			<Abstract type="html">The line height multiple. This value is 0.0 by default.</Abstract>
			<DeclaredIn>BITAttributedLabel.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, assign) CGFloat lineHeightMultiple</Declaration>
			
			
			<Anchor>//api/name/lineHeightMultiple</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/BITAttributedLabel/setTextInsets:</TokenIdentifier>
			<Abstract type="html">The distance, in points, from the margin to the text container. This value is UIEdgeInsetsZero by default.</Abstract>
			<DeclaredIn>BITAttributedLabel.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, assign) UIEdgeInsets textInsets</Declaration>
			
			
			<Anchor>//api/name/textInsets</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/BITAttributedLabel/textInsets</TokenIdentifier>
			<Abstract type="html">The distance, in points, from the margin to the text container. This value is UIEdgeInsetsZero by default.</Abstract>
			<DeclaredIn>BITAttributedLabel.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, assign) UIEdgeInsets textInsets</Declaration>
			
			
			<Anchor>//api/name/textInsets</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/BITAttributedLabel/setVerticalAlignment:</TokenIdentifier>
			<Abstract type="html">The vertical text alignment for the label, for when the frame size is greater than the text rect size. The vertical alignment is TTTAttributedLabelVerticalAlignmentCenter by default.</Abstract>
			<DeclaredIn>BITAttributedLabel.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, assign) BITAttributedLabelVerticalAlignment verticalAlignment</Declaration>
			
			
			<Anchor>//api/name/verticalAlignment</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/BITAttributedLabel/verticalAlignment</TokenIdentifier>
			<Abstract type="html">The vertical text alignment for the label, for when the frame size is greater than the text rect size. The vertical alignment is TTTAttributedLabelVerticalAlignmentCenter by default.</Abstract>
			<DeclaredIn>BITAttributedLabel.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, assign) BITAttributedLabelVerticalAlignment verticalAlignment</Declaration>
			
			
			<Anchor>//api/name/verticalAlignment</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/BITAttributedLabel/setText:</TokenIdentifier>
			<Abstract type="html">Sets the text displayed by the label.</Abstract>
			<DeclaredIn>BITAttributedLabel.h</DeclaredIn>			
			
			<Declaration>- (void)setText:(id)text</Declaration>
			<Parameters>
				<Parameter>
					<Name>text</Name>
					<Abstract type="html">An NSString or NSAttributedString object to be displayed by the label. If the specified text is an NSString, the label will display the text like a UILabel, inheriting the text styles of the label. If the specified text is an NSAttributedString, the label text styles will be overridden by the styles specified in the attributed string.
  </Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/setText:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/BITAttributedLabel/setText:afterInheritingLabelAttributesAndConfiguringWithBlock:</TokenIdentifier>
			<Abstract type="html">Sets the text displayed by the label, after configuring an attributed string containing the text attributes inherited from the label in a block.</Abstract>
			<DeclaredIn>BITAttributedLabel.h</DeclaredIn>			
			
			<Declaration>- (void)setText:(id)text afterInheritingLabelAttributesAndConfiguringWithBlock:(NSMutableAttributedString *( ^ ) ( NSMutableAttributedString *mutableAttributedString ))block</Declaration>
			<Parameters>
				<Parameter>
					<Name>text</Name>
					<Abstract type="html">An NSString or NSAttributedString object to be displayed by the label.</Abstract>
				</Parameter><Parameter>
					<Name>block</Name>
					<Abstract type="html">A block object that returns an NSMutableAttributedString object and takes a single argument, which is an NSMutableAttributedString object with the text from the first parameter, and the text attributes inherited from the label text styles. For example, if you specified the font of the label to be [UIFont boldSystemFontOfSize:14] and textColor to be [UIColor redColor], the NSAttributedString argument of the block would be contain the NSAttributedString attribute equivalents of those properties. In this block, you can set further attributes on particular ranges.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/setText:afterInheritingLabelAttributesAndConfiguringWithBlock:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/BITAttributedLabel/setAttributedText:</TokenIdentifier>
			<Abstract type="html">A copy of the label&apos;s current attributedText. This returns nil if an attributed string has never been set on the label.</Abstract>
			<DeclaredIn>BITAttributedLabel.h</DeclaredIn>			
			
			<Declaration>@property (readwrite, nonatomic, copy) NSAttributedString *attributedText</Declaration>
			
			
			<Anchor>//api/name/attributedText</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/BITAttributedLabel/attributedText</TokenIdentifier>
			<Abstract type="html">A copy of the label&apos;s current attributedText. This returns nil if an attributed string has never been set on the label.</Abstract>
			<DeclaredIn>BITAttributedLabel.h</DeclaredIn>			
			
			<Declaration>@property (readwrite, nonatomic, copy) NSAttributedString *attributedText</Declaration>
			
			
			<Anchor>//api/name/attributedText</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/BITAttributedLabel/addLinkWithTextCheckingResult:</TokenIdentifier>
			<Abstract type="html">Adds a link to an NSTextCheckingResult.</Abstract>
			<DeclaredIn>BITAttributedLabel.h</DeclaredIn>			
			
			<Declaration>- (void)addLinkWithTextCheckingResult:(NSTextCheckingResult *)result</Declaration>
			<Parameters>
				<Parameter>
					<Name>result</Name>
					<Abstract type="html">An NSTextCheckingResult representing the link&apos;s location and type.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/addLinkWithTextCheckingResult:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/BITAttributedLabel/addLinkWithTextCheckingResult:attributes:</TokenIdentifier>
			<Abstract type="html">Adds a link to an NSTextCheckingResult.</Abstract>
			<DeclaredIn>BITAttributedLabel.h</DeclaredIn>			
			
			<Declaration>- (void)addLinkWithTextCheckingResult:(NSTextCheckingResult *)result attributes:(NSDictionary *)attributes</Declaration>
			<Parameters>
				<Parameter>
					<Name>result</Name>
					<Abstract type="html">An NSTextCheckingResult representing the link&apos;s location and type.</Abstract>
				</Parameter><Parameter>
					<Name>attributes</Name>
					<Abstract type="html">The attributes to be added to the text in the range of the specified link. If nil, no attributes are added.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/addLinkWithTextCheckingResult:attributes:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/BITAttributedLabel/addLinkToURL:withRange:</TokenIdentifier>
			<Abstract type="html">Adds a link to a URL for a specified range in the label text.</Abstract>
			<DeclaredIn>BITAttributedLabel.h</DeclaredIn>			
			
			<Declaration>- (void)addLinkToURL:(NSURL *)url withRange:(NSRange)range</Declaration>
			<Parameters>
				<Parameter>
					<Name>url</Name>
					<Abstract type="html">The url to be linked to</Abstract>
				</Parameter><Parameter>
					<Name>range</Name>
					<Abstract type="html">The range in the label text of the link. The range must not exceed the bounds of the receiver.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/addLinkToURL:withRange:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/BITAttributedLabel/addLinkToAddress:withRange:</TokenIdentifier>
			<Abstract type="html">Adds a link to an address for a specified range in the label text.</Abstract>
			<DeclaredIn>BITAttributedLabel.h</DeclaredIn>			
			
			<Declaration>- (void)addLinkToAddress:(NSDictionary *)addressComponents withRange:(NSRange)range</Declaration>
			<Parameters>
				<Parameter>
					<Name>addressComponents</Name>
					<Abstract type="html">A dictionary of address components for the address to be linked to</Abstract>
				</Parameter><Parameter>
					<Name>range</Name>
					<Abstract type="html">The range in the label text of the link. The range must not exceed the bounds of the receiver.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/addLinkToAddress:withRange:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/BITAttributedLabel/addLinkToPhoneNumber:withRange:</TokenIdentifier>
			<Abstract type="html">Adds a link to a phone number for a specified range in the label text.</Abstract>
			<DeclaredIn>BITAttributedLabel.h</DeclaredIn>			
			
			<Declaration>- (void)addLinkToPhoneNumber:(NSString *)phoneNumber withRange:(NSRange)range</Declaration>
			<Parameters>
				<Parameter>
					<Name>phoneNumber</Name>
					<Abstract type="html">The phone number to be linked to.</Abstract>
				</Parameter><Parameter>
					<Name>range</Name>
					<Abstract type="html">The range in the label text of the link. The range must not exceed the bounds of the receiver.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/addLinkToPhoneNumber:withRange:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/BITAttributedLabel/addLinkToDate:withRange:</TokenIdentifier>
			<Abstract type="html">Adds a link to a date for a specified range in the label text.</Abstract>
			<DeclaredIn>BITAttributedLabel.h</DeclaredIn>			
			
			<Declaration>- (void)addLinkToDate:(NSDate *)date withRange:(NSRange)range</Declaration>
			<Parameters>
				<Parameter>
					<Name>date</Name>
					<Abstract type="html">The date to be linked to.</Abstract>
				</Parameter><Parameter>
					<Name>range</Name>
					<Abstract type="html">The range in the label text of the link. The range must not exceed the bounds of the receiver.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/addLinkToDate:withRange:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/BITAttributedLabel/addLinkToDate:timeZone:duration:withRange:</TokenIdentifier>
			<Abstract type="html">Adds a link to a date with a particular time zone and duration for a specified range in the label text.</Abstract>
			<DeclaredIn>BITAttributedLabel.h</DeclaredIn>			
			
			<Declaration>- (void)addLinkToDate:(NSDate *)date timeZone:(NSTimeZone *)timeZone duration:(NSTimeInterval)duration withRange:(NSRange)range</Declaration>
			<Parameters>
				<Parameter>
					<Name>date</Name>
					<Abstract type="html">The date to be linked to.</Abstract>
				</Parameter><Parameter>
					<Name>timeZone</Name>
					<Abstract type="html">The time zone of the specified date.</Abstract>
				</Parameter><Parameter>
					<Name>duration</Name>
					<Abstract type="html">The duration, in seconds from the specified date.</Abstract>
				</Parameter><Parameter>
					<Name>range</Name>
					<Abstract type="html">The range in the label text of the link. The range must not exceed the bounds of the receiver.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/addLinkToDate:timeZone:duration:withRange:</Anchor>
		</Token>
		
	</File>
</Tokens>